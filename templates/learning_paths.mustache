{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template theme_remui_kids/learning_paths

    Learning Paths list page

    Context variables required for this template:
    * learningpaths - Array of learning paths
    * totallearningpaths - Total number of learning paths
    * wwwroot - Moodle wwwroot
    * sesskey - Session key

    Example context (json):
    {
        "learningpaths": [
            {
                "id": 1,
                "name": "Digital Literacy Path",
                "description": "Complete digital literacy learning path",
                "course_count": 5,
                "user_count": 12
            }
        ],
        "totallearningpaths": 1,
        "wwwroot": "http://localhost/moodle",
        "sesskey": "abc123"
    }
}}

<style>
/* Learning Paths List Container - Centered Layout */
.learning-paths-list-container {
    max-width: calc(100% - 40px) !important;
    width: 100% !important;
    margin: 0 auto !important;
    padding: 20px !important;
    min-height: 100vh;
    box-sizing: border-box !important;
    display: block !important;
    position: relative !important;
}

/* Page Header */
.learning-paths-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem; /* Space below the header row */
}

.back-button {
    display: inline-flex;
    align-items: center;
    background: rgba(255, 255, 255, 0.2);
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 25px;
    text-decoration: none;
    transition: all 0.3s ease;
    border: 1px solid rgba(255, 255, 255, 0.3);
}

.back-button:hover {
    background: rgba(255, 255, 255, 0.3);
    color: white;
    text-decoration: none;
    transform: translateY(-2px);
}

.back-button i {
    margin-right: 0.5rem;
}

/* Search Container */
.search-container {
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    padding: 1.5rem;
    margin-top: 2rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
}

.search-box {
    position: relative;
    flex: 1;
    max-width: 400px;
}

.search-icon {
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    color: #6c757d;
    font-size: 1rem;
}

.search-input {
    width: 100%;
    padding: 0.75rem 1rem 0.75rem 2.5rem;
    border: 2px solid #e9ecef;
    border-radius: 25px;
    font-size: 0.9rem;
    transition: all 0.3s ease;
    background: #f8f9fa;
}

.search-input:focus {
    outline: none;
    border-color: #007bff;
    background: white;
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
}

.clear-search-btn {
    position: absolute;
    right: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    color: #6c757d;
    cursor: pointer;
    padding: 0.25rem;
    border-radius: 50%;
    transition: all 0.2s ease;
}

.clear-search-btn:hover {
    background: #e9ecef;
    color: #495057;
}

.search-results-info {
    color: #6c757d;
    font-size: 0.9rem;
    font-weight: 500;
    white-space: nowrap;
}

/* Learning Paths Table */
.learning-paths-table-container {
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    margin-top: 1rem;
}

.learning-paths-table {
    width: 100%;
    border-collapse: collapse;
    margin: 0;
}

.learning-paths-table thead {
    background: #f8f9fa;
}

.learning-paths-table th {
    padding: 1rem;
    text-align: left;
    font-weight: 600;
    color: #495057;
    border-bottom: 1px solid #dee2e6;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.learning-paths-table td {
    padding: 1rem;
    border-bottom: 1px solid #f1f3f4;
    vertical-align: middle;
}

.learning-paths-table tbody tr:hover {
    background: #f8f9fa;
    transition: background-color 0.2s ease;
}

/* Learning Path Info Column */
.learning-path-info {
    display: flex;
    align-items: center;
}

.learning-path-details h4 {
    margin: 0;
    font-size: 1rem;
    font-weight: 600;
    color: #2c3e50;
    line-height: 1.3;
}

.learning-path-details p {
    margin: 0;
    font-size: 0.8rem;
    color: #6c757d;
    margin-top: 0.25rem;
}

/* Status Column */
.learning-path-status {
    display: inline-block;
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.status-active {
    background: #d4edda;
    color: #155724;
}

.status-inactive {
    background: #f8d7da;
    color: #721c24;
}

/* Course Count Column */
.course-count {
    display: inline-block;
    padding: 0.25rem 0.75rem;
    background: #e3f2fd;
    color: #1976d2;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 600;
}

/* User Count Column */
.user-count {
    display: inline-block;
    padding: 0.25rem 0.75rem;
    background: #e8f5e8;
    color: #388e3c;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 600;
}

/* Actions Column */
.learning-path-actions {
    display: flex;
    gap: 0.5rem;
    align-items: center;
}

.action-btn {
    flex: 1;
    padding: 0.4rem;
    border: none;
    border-radius: 6px;
    font-size: 0.8rem;
    font-weight: 500;
    text-decoration: none;
    text-align: center;
    transition: all 0.2s ease;
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.25rem;
}

.btn-view {
    background: #007bff;
    color: white;
}

.btn-view:hover {
    background: #0056b3;
    color: white;
    text-decoration: none;
}

.btn-edit {
    background: #28a745;
    color: white;
}

.btn-edit:hover {
    background: #1e7e34;
    color: white;
    text-decoration: none;
}

.btn-delete {
    background: #dc3545;
    color: white;
}

.btn-delete:hover {
    background: #c82333;
    color: white;
}

/* Empty State */
.empty-state {
    text-align: center;
    padding: 4rem 2rem;
    color: #6c757d;
}

.empty-state i {
    font-size: 4rem;
    margin-bottom: 1rem;
    opacity: 0.5;
}

.empty-state h3 {
    margin: 0 0 0.5rem 0;
    font-size: 1.5rem;
    color: #495057;
}

.empty-state p {
    margin: 0;
    font-size: 1.1rem;
}

/* Responsive Design */
@media (max-width: 768px) {
    .search-container {
        flex-direction: column;
        align-items: stretch;
        gap: 1rem;
    }
    
    .search-box {
        max-width: none;
    }
    
    .search-results-info {
        text-align: center;
    }
    
    .learning-paths-table-container {
        overflow-x: auto;
    }
    
    .learning-paths-table {
        min-width: 500px;
    }
    
    .learning-paths-header h1 {
        font-size: 2rem;
    }
    
    .learning-path-actions {
        flex-direction: column;
        gap: 0.25rem;
    }
    
    .action-btn {
        padding: 0.3rem;
        font-size: 0.7rem;
    }
}

/* Loading Animation */
.learning-paths-table tbody tr.loading {
    opacity: 0.7;
    pointer-events: none;
}

.learning-paths-table tbody tr.loading::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    margin: -10px 0 0 -10px;
    border: 2px solid #f3f3f3;
    border-top: 2px solid #007bff;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}
</style>

<div class="learning-paths-list-container">
    <!-- Page Header -->
    <div class="learning-paths-header">
        <div class="header-content">
            <h1>Learning Paths</h1>
            <p>Manage and view all learning paths in the system ({{totallearningpaths}} learning paths found)</p>
        </div>
        <!-- Back Button -->
        <a href="{{{wwwroot}}}/theme/remui_kids/courses_program.php" class="back-button">
            <i class="fa fa-arrow-left"></i>
            Back to Courses & Programs
        </a>
    </div>
    
    <!-- Search Bar -->
    <div class="search-container">
        <div class="search-box">
            <i class="fa fa-search search-icon"></i>
            <input type="text" id="learningPathSearch" placeholder="Search learning paths by name..." class="search-input">
            <button type="button" id="clearSearch" class="clear-search-btn" style="display: none;">
                <i class="fa fa-times"></i>
            </button>
        </div>
        <div class="search-results-info">
            <span id="searchResultsCount">{{totallearningpaths}} learning paths</span>
        </div>
    </div>
    
    {{#learningpaths}}
    <!-- Learning Paths Table -->
    <div class="learning-paths-table-container">
        <table class="learning-paths-table">
            <thead>
                <tr>
                    <th>Learning Path</th>
                    <th>Status</th>
                    <th>Courses</th>
                    <th>Users</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {{#learningpaths}}
                <tr data-learning-path-id="{{id}}" class="learning-path-row" data-learning-path-name="{{name}}">
                    <td>
                        <div class="learning-path-info">
                            <div class="learning-path-details">
                                <h4>{{name}}</h4>
                                <p>ID: {{id}}</p>
                            </div>
                        </div>
                    </td>
                    <td>
                        <span class="learning-path-status status-active">Active</span>
                    </td>
                    <td>
                        <span class="course-count">{{course_count}} courses</span>
                    </td>
                    <td>
                        <span class="user-count">{{user_count}} users</span>
                    </td>
                    <td>
                        <div class="learning-path-actions">
                            <a href="{{{wwwroot}}}/local/iomad_learningpath/view.php?id={{id}}" class="action-btn btn-view" target="_blank" title="View Learning Path">
                                <i class="fa fa-eye"></i>
                            </a>
                            <a href="{{{wwwroot}}}/local/iomad_learningpath/edit.php?id={{id}}" class="action-btn btn-edit" target="_blank" title="Edit Learning Path">
                                <i class="fa fa-edit"></i>
                            </a>
                            <button class="action-btn btn-delete" onclick="deleteLearningPath({{id}}, '{{name}}')" title="Delete Learning Path">
                                <i class="fa fa-trash"></i>
                            </button>
                        </div>
                    </td>
                </tr>
                {{/learningpaths}}
            </tbody>
        </table>
    </div>
    {{/learningpaths}}
    
    {{^learningpaths}}
    <!-- Empty State -->
    <div class="empty-state">
        <i class="fa fa-link"></i>
        <h3>No Learning Paths Found</h3>
        <p>There are no learning paths available in the system.</p>
    </div>
    {{/learningpaths}}
</div>

<script>
// Search functionality
document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('learningPathSearch');
    const clearBtn = document.getElementById('clearSearch');
    const resultsCount = document.getElementById('searchResultsCount');
    const learningPathRows = document.querySelectorAll('.learning-path-row');
    const totalLearningPaths = learningPathRows.length;

    // Search function
    function performSearch() {
        const searchTerm = searchInput.value.toLowerCase().trim();
        let visibleCount = 0;

        learningPathRows.forEach(row => {
            const learningPathName = row.getAttribute('data-learning-path-name').toLowerCase();
            const isVisible = learningPathName.includes(searchTerm);
            
            if (isVisible) {
                row.style.display = '';
                visibleCount++;
            } else {
                row.style.display = 'none';
            }
        });

        // Update results count
        if (searchTerm === '') {
            resultsCount.textContent = `${totalLearningPaths} learning paths`;
        } else {
            resultsCount.textContent = `${visibleCount} of ${totalLearningPaths} learning paths`;
        }

        // Show/hide clear button
        clearBtn.style.display = searchTerm ? 'block' : 'none';
    }

    // Event listeners
    searchInput.addEventListener('input', performSearch);
    
    clearBtn.addEventListener('click', function() {
        searchInput.value = '';
        performSearch();
        searchInput.focus();
    });

    // Initial search
    performSearch();
});

// Delete learning path function
function deleteLearningPath(learningPathId, learningPathName) {
    if (confirm('Are you sure you want to delete the learning path "' + learningPathName + '"?\n\nThis action cannot be undone and will affect all users enrolled in this learning path.')) {
        // Add loading state
        const row = document.querySelector(`[data-learning-path-id="${learningPathId}"]`);
        if (row) {
            row.classList.add('loading');
        }
        
        // Make AJAX request to delete learning path
        fetch('{{{wwwroot}}}/theme/remui_kids/delete_learning_path.php', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: `learningpathid=${learningPathId}&sesskey={{sesskey}}`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Remove row from DOM
                if (row) {
                    row.style.opacity = '0';
                    row.style.transform = 'scale(0.95)';
                    setTimeout(() => {
                        row.remove();
                        // Update learning path count
                        const header = document.querySelector('.learning-paths-header p');
                        if (header) {
                            const currentCount = parseInt(header.textContent.match(/\d+/)[0]);
                            header.textContent = header.textContent.replace(/\d+/, currentCount - 1);
                        }
                    }, 300);
                }
                
                // Show success message
                showNotification('Learning path deleted successfully!', 'success');
            } else {
                // Show error message
                showNotification('Error deleting learning path: ' + (data.message || 'Unknown error'), 'error');
                // Remove loading state
                if (row) {
                    row.classList.remove('loading');
                }
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showNotification('Error deleting learning path. Please try again.', 'error');
            // Remove loading state
            if (row) {
                row.classList.remove('loading');
            }
        });
    }
}

// Show notification function
function showNotification(message, type) {
    // Create notification element
    const notification = document.createElement('div');
    notification.className = `alert alert-${type === 'success' ? 'success' : 'danger'} alert-dismissible fade show`;
    notification.style.position = 'fixed';
    notification.style.top = '20px';
    notification.style.right = '20px';
    notification.style.zIndex = '9999';
    notification.style.minWidth = '300px';
    
    notification.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    
    document.body.appendChild(notification);
    
    // Auto remove after 5 seconds
    setTimeout(() => {
        if (notification.parentNode) {
            notification.parentNode.removeChild(notification);
        }
    }, 5000);
}
</script>
