{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template theme_remui_kids/courses_list

    Courses list with card layout

    Context variables required for this template:
    * courses - Array of course objects
    * totalcourses - Total number of courses
    * wwwroot - Moodle root URL

    Example context (json):
    {
        "courses": [
            {
                "id": 1,
                "fullname": "Course Name",
                "shortname": "COURSE001",
                "summary": "Course description",
                "categoryname": "Category Name",
                "enrollment_count": 25
            }
        ],
        "totalcourses": 6,
        "wwwroot": "http://localhost/moodle"
    }
}}

<style>
/* Courses List Container - Centered Layout */
.courses-list-container {
    max-width: calc(100% - 40px) !important;
    width: 100% !important;
    margin: 0 auto !important;
    padding: 20px !important;
    min-height: 100vh;
    box-sizing: border-box !important;
    display: block !important;
    position: relative !important;
}

/* Page Header */
.courses-header {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 2rem;
    border-radius: 15px;
    margin-bottom: 2rem;
    text-align: center;
}

.courses-header h1 {
    margin: 0;
    font-size: 2.5rem;
    font-weight: 600;
}

.courses-header p {
    margin: 0.5rem 0 0 0;
    font-size: 1.1rem;
    opacity: 0.9;
}

/* Back Button */
/* Page Header */
.courses-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem; /* Space below the header row */
}

.back-button {
    display: inline-flex;
    align-items: center;
    background: rgba(255, 255, 255, 0.2);
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 25px;
    text-decoration: none;
    transition: all 0.3s ease;
    border: 1px solid rgba(255, 255, 255, 0.3);
}

.back-button:hover {
    background: rgba(255, 255, 255, 0.3);
    color: white;
    text-decoration: none;
    transform: translateY(-2px);
}

.back-button i {
    margin-right: 0.5rem;
}

/* Courses Grid - 4 courses per row - FORCE LAYOUT */
.courses-grid {
    display: grid !important;
    grid-template-columns: repeat(4, 1fr) !important;
    gap: 1.5rem !important;
    margin-top: 2rem !important;
    width: 100% !important;
    max-width: 100% !important;
}

/* Course Card - Light Blue/Green Split Design */
.course-card {
    background: white !important;
    border-radius: 15px !important;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1) !important;
    overflow: hidden !important;
    transition: all 0.3s ease !important;
    border: 1px solid #e9ecef !important;
    position: relative !important;
    width: 100% !important;
    max-width: 100% !important;
    display: block !important;
}

/* Course Cards - White Background with Subtle Shadow */
.course-card {
    background: #ffffff !important;
    border: 1px solid #e9ecef !important;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important;
}

.course-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

/* Hover effects for course cards */
.course-card:hover {
    background: #ffffff !important;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15) !important;
}

/* Course Image - Purple-Blue Gradient */
.course-image {
    width: 100%;
    height: 250px;
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

.course-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
}

.course-image img:hover {
    transform: scale(1.05);
}

.course-image-placeholder {
    font-size: 2.5rem;
    color: #ffffff;
    opacity: 0.9;
}

/* Course Content */
.course-content {
    padding: 1.5rem;
    min-height: 200px;
}

.course-title {
    font-size: 1.2rem;
    font-weight: 600;
    color: #2c3e50;
    margin: 0 0 0.75rem 0;
    line-height: 1.4;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

.course-shortname {
    font-size: 1rem;
    color: #6c757d;
    margin: 0 0 1.2rem 0;
    font-weight: 500;
}

.course-description {
    font-size: 0.9rem;
    color: #6c757d;
    line-height: 1.5;
    margin: 0 0 1.2rem 0;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

.course-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0.8rem 0;
    padding: 0.6rem;
    background: #f8f9fa;
    border-radius: 6px;
    border: 1px solid #e9ecef;
}

.course-category {
    font-size: 0.8rem;
    color: #495057;
    background: #ffffff;
    padding: 0.25rem 0.5rem;
    border-radius: 12px;
    font-weight: 500;
    border: 1px solid #e9ecef;
}

.course-enrollments {
    font-size: 0.8rem;
    color: #28a745;
    font-weight: 600;
    display: flex;
    align-items: center;
}

.course-enrollments i {
    margin-right: 0.25rem;
}

/* Course Actions */
.course-actions {
    display: flex;
    gap: 0.4rem;
    margin-top: 0.8rem;
}

.action-btn {
    flex: 1;
    padding: 0.4rem;
    border: none;
    border-radius: 6px;
    font-size: 0.75rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
}

.action-btn i {
    margin-right: 0.25rem;
}

.btn-view {
    background: #007bff;
    color: white;
}

.btn-view:hover {
    background: #0056b3;
    color: white;
    text-decoration: none;
}

.btn-edit {
    background: #28a745;
    color: white;
}

.btn-edit:hover {
    background: #1e7e34;
    color: white;
    text-decoration: none;
}

.btn-delete {
    background: #dc3545;
    color: white;
}

.btn-delete:hover {
    background: #c82333;
    color: white;
    text-decoration: none;
}

/* Empty State */
.empty-state {
    text-align: center;
    padding: 4rem 2rem;
    color: #6c757d;
}

.empty-state i {
    font-size: 4rem;
    margin-bottom: 1rem;
    opacity: 0.5;
}

.empty-state h3 {
    margin: 0 0 1rem 0;
    color: #495057;
}

.empty-state p {
    margin: 0;
    font-size: 1.1rem;
}

/* Responsive Design - FORCE GRID LAYOUT */
@media (max-width: 1200px) {
    .courses-grid {
        grid-template-columns: repeat(3, 1fr) !important;
        gap: 1.5rem !important;
    }
}

@media (max-width: 900px) {
    .courses-grid {
        grid-template-columns: repeat(2, 1fr) !important;
        gap: 1.5rem !important;
    }
}

@media (max-width: 768px) {
    .courses-grid {
        grid-template-columns: 1fr !important;
        gap: 1.5rem !important;
    }
    
    .courses-header h1 {
        font-size: 2rem;
    }
    
    .course-actions {
        flex-direction: column;
    }
    
    .action-btn {
        margin-bottom: 0.5rem;
    }
}

/* Loading Animation */
.course-card.loading {
    opacity: 0.7;
    pointer-events: none;
}

.course-card.loading::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    margin: -10px 0 0 -10px;
    border: 2px solid #f3f3f3;
    border-top: 2px solid #007bff;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}
</style>

<div class="courses-list-container">
    <!-- Page Header -->
    <div class="courses-header">
        <div class="header-content">
            <h1>All Courses</h1>
            <p>Manage and view all courses in the system ({{totalcourses}} courses found)</p>
        </div>
        <!-- Back Button -->
        <a href="{{{wwwroot}}}/theme/remui_kids/courses_program.php" class="back-button">
            <i class="fa fa-arrow-left"></i>
            Back to Courses & Programs
        </a>
    </div>
    
    <!-- Courses Grid - Single Container for All Courses -->
    <div class="courses-grid" style="display: grid !important; grid-template-columns: repeat(4, 1fr) !important; gap: 1.5rem !important; width: 100% !important;">
        {{#courses}}
        <div class="course-card" data-course-id="{{id}}" style="width: 100% !important; max-width: 100% !important; display: block !important;">
            <!-- Course Image -->
            <div class="course-image">
                {{#courseimage}}
                <img src="{{{courseimage}}}" alt="{{fullname}}" 
                     onerror="console.log('Image failed to load:', this.src); this.style.display='none'; this.nextElementSibling.style.display='flex';" 
                     onload="console.log('Image loaded successfully:', this.src);">
                {{/courseimage}}
                <div class="course-image-placeholder" style="{{#courseimage}}display: none;{{/courseimage}}">
                    <i class="fa fa-book"></i>
                </div>
            </div>
            
            <!-- Course Content -->
            <div class="course-content">
                <h3 class="course-title">{{fullname}}</h3>
                <p class="course-shortname">{{shortname}}</p>
                
                {{#summary}}
                <p class="course-description">{{summary}}</p>
                {{/summary}}
                
                <div class="course-meta">
                    <span class="course-category">{{categoryname}}</span>
                    <span class="course-enrollments">
                        <i class="fa fa-users"></i>
                        {{enrollment_count}} enrolled
                    </span>
                </div>
                
                <!-- Course Actions -->
                <div class="course-actions">
                    <a href="{{{wwwroot}}}/course/view.php?id={{id}}" class="action-btn btn-view">
                        <i class="fa fa-eye"></i>
                        View
                    </a>
                    <a href="{{{wwwroot}}}/course/edit.php?id={{id}}" class="action-btn btn-edit">
                        <i class="fa fa-edit"></i>
                        Edit
                    </a>
                    <button class="action-btn btn-delete" onclick="deleteCourse({{id}}, '{{fullname}}')">
                        <i class="fa fa-trash"></i>
                        Delete
                    </button>
                </div>
            </div>
        </div>
        {{/courses}}
    </div>
    
    {{^courses}}
    <!-- Empty State -->
    <div class="empty-state">
        <i class="fa fa-book"></i>
        <h3>No Courses Found</h3>
        <p>There are no courses available in the system.</p>
    </div>
    {{/courses}}
</div>

<script>
// Delete course function
function deleteCourse(courseId, courseName) {
    if (confirm('Are you sure you want to delete the course "' + courseName + '"?\n\nThis action cannot be undone.')) {
        // Add loading state
        const card = document.querySelector(`[data-course-id="${courseId}"]`);
        if (card) {
            card.classList.add('loading');
        }
        
        // Make AJAX request to delete course
        fetch('{{{wwwroot}}}/theme/remui_kids/delete_course.php', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: `courseid=${courseId}&sesskey={{sesskey}}`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Remove card from DOM
                if (card) {
                    card.style.opacity = '0';
                    card.style.transform = 'scale(0.8)';
                    setTimeout(() => {
                        card.remove();
                        // Update course count
                        const header = document.querySelector('.courses-header p');
                        if (header) {
                            const currentCount = parseInt(header.textContent.match(/\d+/)[0]);
                            header.textContent = header.textContent.replace(/\d+/, currentCount - 1);
                        }
                    }, 300);
                }
                
                // Show success message
                showNotification('Course deleted successfully!', 'success');
            } else {
                // Show error message
                showNotification('Error deleting course: ' + (data.message || 'Unknown error'), 'error');
                // Remove loading state
                if (card) {
                    card.classList.remove('loading');
                }
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showNotification('Error deleting course. Please try again.', 'error');
            // Remove loading state
            if (card) {
                card.classList.remove('loading');
            }
        });
    }
}

// Show notification function
function showNotification(message, type) {
    // Create notification element
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 1rem 1.5rem;
        border-radius: 8px;
        color: white;
        font-weight: 500;
        z-index: 9999;
        animation: slideIn 0.3s ease;
        max-width: 300px;
    `;
    
    if (type === 'success') {
        notification.style.background = '#28a745';
    } else {
        notification.style.background = '#dc3545';
    }
    
    notification.textContent = message;
    document.body.appendChild(notification);
    
    // Remove notification after 3 seconds
    setTimeout(() => {
        notification.style.animation = 'slideOut 0.3s ease';
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 300);
    }, 3000);
}

// Add CSS for notifications
const style = document.createElement('style');
style.textContent = `
    @keyframes slideIn {
        from { transform: translateX(100%); opacity: 0; }
        to { transform: translateX(0); opacity: 1; }
    }
    @keyframes slideOut {
        from { transform: translateX(0); opacity: 1; }
        to { transform: translateX(100%); opacity: 0; }
    }
`;
document.head.appendChild(style);
</script>
