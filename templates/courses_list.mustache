{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

    Courses List Template
    @package theme_remui_kids
    @copyright 2024 Riyada Trainings
    @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
}}

{{!
    @template theme_remui_kids/courses_list

    Courses list page template

    Example context (json):
    {
        "courses": [
            {
                "id": 1,
                "fullname": "Course Name",
                "shortname": "COURSE001",
                "summary": "Course description",
                "enrollmentcount": 25,
                "imageurl": "http://example.com/image.jpg"
            }
        ],
        "totalcourses": 10,
        "wwwroot": "http://localhost/Kodeit-Iomad-local/iomad-test",
        "sesskey": "abc123"
    }
}}

<!-- Include courses CSS -->
<link rel="stylesheet" href="{{wwwroot}}/theme/remui_kids/style/courses.css">

<div class="courses-container" data-page="coursesprogram">
    <!-- Header Section -->
    <div class="courses-header">
        <div class="header-content">
            <h1>All Courses</h1>
            <p class="header-subtitle">Manage and view all available courses</p>
        </div>
        <a href="{{wwwroot}}/theme/remui_kids/courses_program.php" class="back-button">
            ‚Üê Back to Courses & Programs
        </a>
    </div>

    <!-- Courses Grid -->
    <div class="courses-grid">
        {{#courses}}
        <div class="course-card" data-course-id="{{id}}">
            <!-- Course Image -->
            <div class="course-image">
                {{#courseimage}}
                <img src="{{courseimage}}" alt="{{fullname}}" class="course-img" 
                     onload="console.log('Course image loaded:', '{{fullname}}')"
                     onerror="console.log('Course image failed to load:', '{{fullname}}')">
                {{/courseimage}}
                {{^courseimage}}
                <div class="course-image-placeholder">
                    <i class="fa fa-graduation-cap"></i>
                </div>
                {{/courseimage}}
                
                <!-- Action Icons Overlay (Top-Left) -->
                <div class="action-icons-overlay">
                    <a href="{{wwwroot}}/course/view.php?id={{id}}" class="action-icon view-icon" title="View Course">
                        <i class="fa fa-eye"></i>
                    </a>
                    <a href="{{wwwroot}}/course/edit.php?id={{id}}" class="action-icon edit-icon" title="Edit Course">
                        <i class="fa fa-edit"></i>
                    </a>
                    <button class="action-icon delete-icon" title="Delete Course" onclick="deleteCourse({{id}}, '{{fullname}}')">
                        <i class="fa fa-trash"></i>
                    </button>
                </div>
                
                <!-- Enrollment Count Overlay (Bottom-Left) -->
                <div class="enrollment-overlay">
                    <span class="clickable-enrollments" onclick="showEnrolledUsers({{id}}, '{{fullname}}')">
                        <i class="fa fa-users"></i>
                        {{enrollment_count}} enrolled
                    </span>
                </div>
            </div>
            
            <!-- Course Content -->
            <div class="course-content">
                <!-- Course Category at Top -->
                <div class="course-category-top">
                    <span class="course-category">{{categoryname}}</span>
                </div>
                
                <h3 class="course-title">{{fullname}}</h3>
                <p class="course-shortname">{{fullname}}</p>
                <p class="course-description">{{summary}}</p>
            </div>
        </div>
        {{/courses}}
    </div>

    <!-- No Courses Message -->
    {{^courses}}
    <div class="no-courses-message">
        <div class="no-courses-icon">
            <i class="fa fa-graduation-cap"></i>
        </div>
        <h3>No Courses Found</h3>
        <p>There are no courses available at the moment.</p>
    </div>
    {{/courses}}
</div>

<!-- Enrolled Users Modal -->
<div id="enrolledUsersModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2 id="modalTitle">Enrolled Users</h2>
            <button class="modal-close" onclick="closeEnrolledUsersModal()">&times;</button>
        </div>
        <div class="modal-body">
            <!-- Search Bar -->
            <div class="search-container">
                <div class="search-box">
                    <i class="fa fa-search search-icon"></i>
                    <input type="text" id="userSearchInput" placeholder="Search users..." class="search-input">
                    <button class="clear-search-btn" onclick="clearUserSearch()" style="display: none;">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
                <div class="search-results-info">
                    <span id="resultsCount">0 users found</span>
                </div>
            </div>
            
            <!-- Users List -->
            <div class="users-list" id="usersList">
                <div class="loading-spinner">
                    <i class="fa fa-spinner fa-spin"></i>
                    <span>Loading users...</span>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// Global variables for enrolled users modal
let allUsers = [];
let filteredUsers = [];

// Show enrolled users modal
function showEnrolledUsers(courseId, courseName) {
    const modal = document.getElementById('enrolledUsersModal');
    const modalTitle = document.getElementById('modalTitle');
    const usersList = document.getElementById('usersList');
    
    modalTitle.textContent = `Enrolled Users - ${courseName}`;
    modal.style.display = 'block';
    
    // Show loading spinner
    usersList.innerHTML = `
        <div class="loading-spinner">
            <i class="fa fa-spinner fa-spin"></i>
            <span>Loading users...</span>
        </div>
    `;
    
    // Fetch enrolled users
    fetch(`{{wwwroot}}/theme/remui_kids/get_enrolled_users.php?courseid=${courseId}&sesskey={{sesskey}}`)
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                allUsers = data.users;
                filteredUsers = [...allUsers];
                renderUsers();
                updateResultsCount();
            } else {
                usersList.innerHTML = `
                    <div class="no-users">
                        <i class="fa fa-users"></i>
                        <p>No enrolled users found</p>
                    </div>
                `;
            }
        })
        .catch(error => {
            console.error('Error fetching enrolled users:', error);
            usersList.innerHTML = `
                <div class="no-users">
                    <i class="fa fa-exclamation-triangle"></i>
                    <p>Error loading users</p>
                </div>
            `;
        });
}

// Close enrolled users modal
function closeEnrolledUsersModal() {
    const modal = document.getElementById('enrolledUsersModal');
    modal.style.display = 'none';
    allUsers = [];
    filteredUsers = [];
}

// Render users list
function renderUsers() {
    const usersList = document.getElementById('usersList');
    
    if (filteredUsers.length === 0) {
        usersList.innerHTML = `
            <div class="no-users">
                <i class="fa fa-search"></i>
                <p>No users found matching your search</p>
            </div>
        `;
        return;
    }
    
    usersList.innerHTML = filteredUsers.map(user => `
        <div class="user-item">
            <div class="user-avatar">
                <i class="fa fa-user"></i>
            </div>
            <div class="user-info">
                <div class="user-name">${user.fullname}</div>
                <div class="user-email">${user.email}</div>
                <div class="user-role">${user.role}</div>
            </div>
        </div>
    `).join('');
}

// Update results count
function updateResultsCount() {
    const resultsCount = document.getElementById('resultsCount');
    const count = filteredUsers.length;
    resultsCount.textContent = `${count} user${count !== 1 ? 's' : ''} found`;
}

// Perform user search
function performUserSearch() {
    const searchInput = document.getElementById('userSearchInput');
    const clearBtn = document.querySelector('.clear-search-btn');
    const query = searchInput.value.toLowerCase().trim();
    
    if (query === '') {
        filteredUsers = [...allUsers];
        clearBtn.style.display = 'none';
    } else {
        filteredUsers = allUsers.filter(user => 
            user.fullname.toLowerCase().includes(query) ||
            user.email.toLowerCase().includes(query) ||
            user.role.toLowerCase().includes(query)
        );
        clearBtn.style.display = 'block';
    }
    
    renderUsers();
    updateResultsCount();
}

// Clear user search
function clearUserSearch() {
    const searchInput = document.getElementById('userSearchInput');
    const clearBtn = document.querySelector('.clear-search-btn');
    
    searchInput.value = '';
    clearBtn.style.display = 'none';
    filteredUsers = [...allUsers];
    renderUsers();
    updateResultsCount();
}

// Delete course function
function deleteCourse(courseId, courseName) {
    if (confirm(`Are you sure you want to delete the course "${courseName}"? This action cannot be undone.`)) {
        fetch(`{{wwwroot}}/theme/remui_kids/delete_course.php`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: `courseid=${courseId}&sesskey={{sesskey}}`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Remove the course card from the DOM
                const courseCard = document.querySelector(`[data-course-id="${courseId}"]`);
                if (courseCard) {
                    courseCard.remove();
                }
                
                // Show success message
                alert('Course deleted successfully!');
            } else {
                alert('Error deleting course: ' + (data.message || 'Unknown error'));
            }
        })
        .catch(error => {
            console.error('Error deleting course:', error);
            alert('Error deleting course. Please try again.');
        });
    }
}

// Event listeners
document.addEventListener('DOMContentLoaded', function() {
    // Search input event listener
    const searchInput = document.getElementById('userSearchInput');
    if (searchInput) {
        searchInput.addEventListener('input', performUserSearch);
    }
    
    // Modal close on escape key
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeEnrolledUsersModal();
        }
    });
    
    // Modal close on outside click
    const modal = document.getElementById('enrolledUsersModal');
    if (modal) {
        modal.addEventListener('click', function(e) {
            if (e.target === modal) {
                closeEnrolledUsersModal();
            }
        });
    }
});

// Page identification for sidebar
document.addEventListener('DOMContentLoaded', function() {
    const currentPath = window.location.pathname;
    console.log('Admin - Current path:', currentPath);
    
    // Extract page identifier from path
    let currentPage = null;
    if (currentPath.includes('courses_list.php')) {
        currentPage = 'coursesprogram';
    } else if (currentPath.includes('courses_program.php')) {
        currentPage = 'coursesprogram';
    } else if (currentPath.includes('categories_list.php')) {
        currentPage = 'coursesprogram';
    } else if (currentPath.includes('learning_paths.php')) {
        currentPage = 'coursesprogram';
    }
    
    console.log('Admin - Current page:', currentPage);
    
    if (currentPage) {
        // Find and activate the corresponding sidebar link
        const activeLink = document.querySelector(`[data-page="${currentPage}"]`);
        console.log('Admin - Active link found:', activeLink);
        
        if (activeLink) {
            // Remove active class from all links
            document.querySelectorAll('.riyada-nav-link').forEach(link => {
                link.classList.remove('active');
            });
            
            // Add active class to current link
            activeLink.classList.add('active');
            console.log('Admin - Added active class to:', activeLink);
        } else {
            console.log('Admin - No active link found for page:', currentPage);
            
            // Debug: List all available data-page attributes
            const allLinks = document.querySelectorAll('[data-page]');
            console.log('Admin - Available data-page attributes:', Array.from(allLinks).map(link => link.getAttribute('data-page')));
        }
    }
});
</script>